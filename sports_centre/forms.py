from datetime import datetime, timedelta

from django import forms

from .models import Booking, SportsCentre


class BootstrapMixinForm(forms.ModelForm):
    """
    Sample Django Form To add Bootstrap's Form Control class to every field.
    """
    def __init__(self, *args, **kwargs):
        super(BootstrapMixinForm, self).__init__(*args, **kwargs)
        for myField in self.fields:
            self.fields[myField].widget.attrs['class'] = 'form-control'

    class Meta:
        abstract = True


class BookingForm(BootstrapMixinForm):
    """
    Booking form containing name,phone_number,date,slot.

    Multiple slots can be booked for a date.
    """
    slot = forms.MultipleChoiceField(widget=forms.SelectMultiple())

    class Meta:
        model = Booking
        fields = ['name', 'phone_number', 'date', 'slot']

    def __init__(self, id, *args, **kwargs):
        """
        id : id of the SportsCentre.

        Calls calc_choices function to create choices for slots.

        Label of the slot field is also defined.
        """
        super(BookingForm, self).__init__(*args, **kwargs)
        self.fields['slot'].choices = self.calc_choices(id)
        self.fields['slot'].label = "Select Slots Needed:"

    def calc_choices(self, id):
        """
        This function takes id of the SportsCentre as argument and
        returns the SLOT_CHOICES for the multiple select field.

        Time slot tuples are appended to SLOT_CHOICES.

        Each tuple is generated by looping from the opening time to the closing
        time of the particular SportsCentre with an interval of 1 hour.

        Since only datetime objects can be added with timedelta, a sample date
        of 2001-8-5 is used.
        """
        booking_centre = SportsCentre.objects.get(id=id)
        ao = booking_centre.opening_time
        ac = booking_centre.closing_time
        # the date provided below is just a sample date
        # it is used for iterating through the timing as datetime object
        start = datetime(2001, 8, 5, ao.hour, ao.minute)
        end = datetime(2001, 8, 5, ac.hour, ac.minute)

        SLOT_CHOICES = ()

        test = start
        while(test < end):
            display_string = (test.strftime("%I %M %p") + " to " +
                              (test+timedelta(hours=1)).strftime("%I %M %p"))
            timing_slot = (display_string, display_string)
            SLOT_CHOICES = SLOT_CHOICES+(timing_slot,)
            test = test+timedelta(hours=1)
        return SLOT_CHOICES
